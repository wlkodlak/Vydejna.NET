ZPRACOVANI TRANSIENTNICH CHYB:
* EventProcessSimple:
  - transientni chyba z EventStreaming zpusobuje opakovani pokusu ziskat eventy, casovy odstup roste, neomezene opakovani
  - trvala chyba z EventStreaming ukoncuje cely proces
  - transientni chyba v handleru zpusobi opakovani pokusu vykonat handler, casovy odstup roste, maximalne 5 opakovani
  - trvala chyba nebo dlouhodova transientni chyba davaji zpravu do dead letter
  - chyba zapisu dead letter ma nekonecne opakovani (pokud neni mozne zapsat chybu, nema smysl pokracovat)
* EventProjectorSimple:
  - transientni chyba z EventStreaming zpusobuje opakovani pokusu ziskat eventy, casovy odstup roste, neomezene opakovani
  - trvala chyba z EventStreaming ukoncuje cely proces
  - transientni chyba v handleru zpusobi opakovani pokusu vykonat handler, casovy odstup roste, neomezene opakovani
  - ProjectorMessages.ConcurrencyException restartuje cely proces projekce
  - trvala chyba zavola detekci (jedna metoda pro celou projekci - exception + message), jak se pri teto chybe zachovat:
    a) ukoncit projekci, zalogovat chybu - tj. rychle selhani
	b) vadnou zpravu vlozit do dead letter, zalogovat chybu a pokracovat; neschopnost zapsat do dead letter ma neomezene opakovani
* DatabasePostgres by mela implementovat Circuit Breaker - pri chybe pripojeni (vadny connection string nebo neodpovidajici server) by se nemely posilat dalsi zadosti o spojeni, dokud nebude jedno z nich opet uspesne otevreno. Chyba prihlasovacich udaju se zkousi znovu az po restartu celeho programu (jinak hrozi zamceni).

PODPORA VICE UZLU:
* Zrusit INodeLockManager, jeho praci zastane ProcessManager
* vsechny IProcessWorker musi umoznovat opetovny start

INTEGRACE DO IIS:
* Volani HTTP requestu z IIS (prikazy + query, je zde zahrnuta podpora readeru a command handleru)
* Zpracovani na pozadi pri hostovani v IIS (nutno vyuzit prostredky IIS hosta pro zabraneni recyklace pri aktivni praci hlavni sbernice)

JMETER PERFORMANCE TESTING:
* zakladem je CSV soubor, ktery obsahuje:
  - relativni URL
  - payload (v jednom radku)

LOGOVANI:
* pri startu hosta zalogovat verzi assembly, pouzitou konfiguraci
* event handler:
  - pri startu uvodni token
  - pri ukonceni posledni zpracovany token
  - pri dead letter chybny token, typ zpravy a telo zpravy (prvnich 1000 znaku)
* projekce
  - pri startu uvodni token a typ rebuildu
  - pri ukonceni posledni zpracovany token
  - pri trvale chybe chybny token, typ zpravy, telo zpravy (prvnich 1000 znaku)
* zapis nutne asynchronni (synchronizace nesmi mit vyznamny efekt, zadny fsync)
* kazda samostatna sluzba (event handler, projekce, domain service) ma vlastni log (nutno mit vhodny prefix)
  - definovane + necislovane + cislovane + unikatnost
  - externi ciselniky
  - kazda projekce samostatne
  - kazdy event handler samostatne
